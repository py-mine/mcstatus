name: Publish to PyPi

on:
  push:
    tags:
      # This pattern is not a typical regular expression, see:
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - "v*"

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.13"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true
          cache-suffix: "publish-ci"
          activate-environment: true

      - name: Install dependencies
        run: |
          uv sync --no-default-groups

      - name: Make sure pyproject.toml version matches git version
        run: |
          git_version=$(git describe)
          pyproject_version=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")

          if [ "$git_verson" != "$pyproject_version" ]; then
            echo "The version specified in pyproject.toml ($pyproject_version) doesn't match the git version ($git_verson)"
            echo "You most likely forgot to update pyproject.toml when publishing the release tag"
            echo "You can fix this by updating the pyproject version and overwriting the git tag"
            exit 1
          fi

      - name: Build package
        run: uv build

      - name: Upload build files
        uses: actions/upload-artifact@v4
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  publish-pypi:
    name: "Publish to PyPI"
    needs: build
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # Used to authenticate to PyPI via OIDC.
      id-token: write

    steps:
      - name: Download the distribution files from PR artifact
        uses: actions/download-artifact@v4
        with:
          name: "dist"
          path: "dist/"

      # This uses PyPI's trusted publishing, so no token is required
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
